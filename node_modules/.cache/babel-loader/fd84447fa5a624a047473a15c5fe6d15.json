{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cocci\\\\Desktop\\\\react\\\\openbankbase\\\\ok-test-main\\\\src\\\\components\\\\Form\\\\CreatePasswordScreen.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from './TextField';\nimport { CheckItems } from './CheckItems';\nimport { Context } from '../Context';\nimport { submitForm } from '../../services/api';\nimport { Loading } from './Loading';\nimport infobaloon from '../../assets/img/globo.png';\nexport const CreatePasswordScreen = () => {\n  const history = useHistory();\n  const {\n    checkpoints,\n    setcheckpoints,\n    setActiveStep,\n    setapiresponse\n  } = useContext(Context);\n  const [isLoading, setisLoading] = useState(false);\n  useEffect(() => {\n    setActiveStep(1);\n  }, [setActiveStep]);\n\n  const handleReturnHome = () => {\n    setcheckpoints({ ...checkpoints,\n      'acceptContract': false\n    });\n    history.push('./');\n  };\n\n  const validate = Yup.object({\n    password: Yup.string().min(8, 'La contraseña debe poseer al menos 8 caracteres').required('La contraseña es requerida').matches(/^.*((?=.*[0-9]){1}).*$/, \"La contraseña debe poseer al menos un número\").matches(/^.*((?=.*[A-Z]){1}).*$/, \"La contraseña debe poseer al menos una mayúscula\").matches(/^.*((?=.*[a-z]){1}).*$/, \"La contraseña debe poseer al menos una minúscula\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir').required('La confirmación de contraseña es requerida'),\n    pista: Yup.string().max(255, 'La pista no puede superar los 255 caracteres')\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Crea tu Password Manager\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"En primer lugar, debes crear una contrase\\xF1a diferente para tus pertenencias electr\\xF3nicas. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 101\n    }\n  }), \"No podr\\xE1s recuperar tu contrase\\xF1a, as\\xED que recu\\xE9rdala bien.\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n      pista: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      setisLoading(true);\n      submitForm(values.password, values.confirmPassword, values.pista).then(response => setapiresponse(response)).catch(function (err) {\n        console.log(err); //si bien el manejo del error es tenido en cuenta ya que en la pantalla de feedback mostrará que no se puedo crear Password Manager hago un console.log del error por control de programación\n      }).finally(setTimeout(() => {\n        setcheckpoints({ ...checkpoints,\n          'passwordAccepted': true\n        });\n        history.push('./response');\n      }, 3020));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, formik => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CheckItems, {\n    values: formik.values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Crea tu Contrase\\xF1a Maestra\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Elige una contrase\\xF1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Repite tu Contrase\\xF1a Maestra\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Repite tu contrase\\xF1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, \"Tambi\\xE9n puedes crear una pista que te ayude a recordar tu contrase\\xF1a maestra. \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-info-circle screen3__infoicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 105\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Crea tu pista para recordar tu contrase\\xF1a maestra (opcional)\",\n    maxLength: \"255\",\n    name: \"pista\",\n    type: \"text\",\n    placeholder: \"Introduce tu pista\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen2__contadorbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"screen2__contador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 61\n    }\n  }, formik.values.pista.length, \"/255\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }, \"Siguiente \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-chevron-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 83\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light\",\n    type: \"reset\",\n    onClick: handleReturnHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, \"Cancelar\"))))));\n};","map":{"version":3,"sources":["C:/Users/cocci/Desktop/react/openbankbase/ok-test-main/src/components/Form/CreatePasswordScreen.js"],"names":["React","useContext","useState","useEffect","useHistory","Formik","Form","Yup","TextField","CheckItems","Context","submitForm","Loading","infobaloon","CreatePasswordScreen","history","checkpoints","setcheckpoints","setActiveStep","setapiresponse","isLoading","setisLoading","handleReturnHome","push","validate","object","password","string","min","required","matches","confirmPassword","oneOf","ref","pista","max","values","then","response","catch","err","console","log","finally","setTimeout","formik","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Formik, Form} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from './TextField';\r\nimport { CheckItems } from './CheckItems';\r\nimport { Context } from '../Context';\r\nimport { submitForm } from '../../services/api';\r\nimport { Loading } from './Loading';\r\nimport infobaloon from '../../assets/img/globo.png'\r\n\r\n\r\nexport const CreatePasswordScreen = () => {\r\n\r\n    const history = useHistory();     \r\n\r\n    const {checkpoints, setcheckpoints, setActiveStep, setapiresponse} = useContext (Context);\r\n\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setActiveStep(1);\r\n    }, [setActiveStep])\r\n\r\n    const handleReturnHome = () =>{\r\n      setcheckpoints({...checkpoints, 'acceptContract':false})\r\n      history.push('./');\r\n    }\r\n\r\n    const validate = Yup.object({\r\n        password: Yup.string()\r\n      .min(8, 'La contraseña debe poseer al menos 8 caracteres')\r\n      .required('La contraseña es requerida')\r\n      .matches(\r\n        /^.*((?=.*[0-9]){1}).*$/,\r\n        \"La contraseña debe poseer al menos un número\"\r\n      )\r\n      .matches(\r\n        /^.*((?=.*[A-Z]){1}).*$/,\r\n        \"La contraseña debe poseer al menos una mayúscula\"\r\n      ).matches(\r\n        /^.*((?=.*[a-z]){1}).*$/,\r\n        \"La contraseña debe poseer al menos una minúscula\"\r\n      ),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir')\r\n      .required('La confirmación de contraseña es requerida'),\r\n    pista: Yup.string()\r\n      .max(255, 'La pista no puede superar los 255 caracteres')\r\n    })\r\n\r\n  return (\r\n    <>\r\n    {isLoading && <Loading />}\r\n    <div className=\"base__container\">\r\n      <div className=\"base__content\">\r\n        \r\n        \r\n        <h1>Crea tu Password Manager</h1>\r\n        <div className=\"base__underline\"></div>\r\n        <h3>\r\n          En primer lugar, debes crear una contraseña diferente para tus pertenencias electrónicas. <br/>\r\n          No podrás recuperar tu contraseña, así que recuérdala bien.\r\n        </h3>\r\n        \r\n        \r\n          <Formik\r\n              initialValues={{\r\n                  password: '',\r\n                  confirmPassword: '',\r\n                  pista: '',\r\n              }}\r\n          \r\n              validationSchema={validate}\r\n\r\n              onSubmit={values => {\r\n                setisLoading(true);\r\n                submitForm(values.password, values.confirmPassword, values.pista)\r\n                .then(response => setapiresponse(response))\r\n                .catch(function(err) {\r\n                  console.log(err); //si bien el manejo del error es tenido en cuenta ya que en la pantalla de feedback mostrará que no se puedo crear Password Manager hago un console.log del error por control de programación\r\n                })\r\n                .finally(\r\n                  setTimeout(() => {\r\n                    setcheckpoints({...checkpoints, 'passwordAccepted':true});\r\n                    history.push('./response');\r\n                  }, 3020)\r\n                );\r\n              }}\r\n          >\r\n      \r\n              {formik => (\r\n                  <Form>\r\n                      <CheckItems values={formik.values}/>\r\n                      \r\n                      <div className=\"container\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-5\">\r\n                            <TextField label=\"Crea tu Contraseña Maestra\" name=\"password\" type=\"password\" placeholder=\"Elige una contraseña\"/>\r\n                          </div>\r\n                          <div className=\"col-lg-5\">\r\n                            <TextField label=\"Repite tu Contraseña Maestra\" name=\"confirmPassword\" type=\"password\" placeholder=\"Repite tu contraseña\"/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <h3>También puedes crear una pista que te ayude a recordar tu contraseña maestra. <i className=\"bi bi-info-circle screen3__infoicon\"></i></h3>\r\n                      <TextField label=\"Crea tu pista para recordar tu contraseña maestra (opcional)\" maxLength=\"255\" name=\"pista\" type=\"text\" placeholder=\"Introduce tu pista\"/>\r\n                      <div className=\"screen2__contadorbox\"><h3 className=\"screen2__contador\">{formik.values.pista.length}/255</h3></div>\r\n                      \r\n                      \r\n                      <button className=\"btn btn-primary\" type=\"submit\">Siguiente <i className=\"bi bi-chevron-right\"></i></button>\r\n                      <button className=\"btn btn-light\" type=\"reset\" onClick={handleReturnHome}>Cancelar</button>\r\n                  </Form>\r\n              )}\r\n          </Formik>\r\n      </div>\r\n    </div> \r\n    </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}