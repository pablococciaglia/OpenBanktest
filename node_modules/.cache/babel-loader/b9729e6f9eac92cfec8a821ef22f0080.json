{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cocci\\\\Desktop\\\\react\\\\openbankbase\\\\ok-test-main\\\\src\\\\components\\\\StepProgress.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { useContext } from 'react';\nimport { Context } from './Context';\nexport const StepProgress = () => {\n  const _useContext = useContext(Context),\n        activeStep = _useContext.activeStep;\n\n  const steps = getSteps();\n  return React.createElement(React.Fragment, null, React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: React.createElement(ColorlibConnector, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, steps.map(label => React.createElement(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, label)))));\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 19\n  },\n  active: {\n    '& $line': {\n      background: '#FF0049'\n    }\n  },\n  completed: {\n    '& $line': {\n      background: '#FF0049'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#788f9c'\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#788f9c',\n    zIndex: 1,\n    color: '#FFF1E5',\n    width: 40,\n    height: 40,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    position: 'relative',\n    bottom: '5px',\n    background: '#002B45',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    width: 50,\n    height: 50\n  },\n  completed: {\n    background: '#FF0049'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const active = props.active,\n        completed = props.completed;\n  const numbers = {\n    1: 1,\n    2: 2,\n    3: 3\n  };\n  return React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, completed ? React.createElement(Check, {\n    className: classes.completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : numbers[String(props.icon)]);\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['', '', ''];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return '';\n\n    case 1:\n      return '';\n\n    case 2:\n      return '';\n\n    default:\n      return '';\n  }\n}","map":{"version":3,"sources":["C:\\Users\\cocci\\Desktop\\react\\openbankbase\\ok-test-main\\src\\components\\StepProgress.js"],"names":["React","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","StepConnector","useContext","Context","StepProgress","activeStep","steps","getSteps","backgroundColor","map","label","ColorlibStepIcon","ColorlibConnector","alternativeLabel","top","active","background","completed","line","height","border","useColorlibStepIconStyles","root","zIndex","color","width","display","borderRadius","justifyContent","alignItems","position","bottom","boxShadow","props","classes","numbers","String","icon","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getStepContent","step"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport { useContext } from 'react';\r\nimport { Context } from './Context';\r\n\r\nexport const StepProgress = () => {\r\n    const {activeStep} = useContext (Context);\r\n    const steps = getSteps();\r\n          \r\n    return (\r\n        <>  \r\n            <Stepper \r\n                alternativeLabel activeStep={activeStep} \r\n                connector={<ColorlibConnector />}\r\n                style={{ backgroundColor: \"transparent\" }}\r\n            >\r\n                {steps.map((label) => (\r\n                <Step key={label}>\r\n                    <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                </Step>\r\n                ))}\r\n            </Stepper> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 19,\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        background: '#FF0049',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        background: '#FF0049',\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: '#788f9c',\r\n    },\r\n  })(StepConnector);\r\n  \r\n  const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: '#788f9c',\r\n      zIndex: 1,\r\n      color: '#FFF1E5',\r\n      width: 40,\r\n      height: 40,\r\n      display: 'flex',\r\n      borderRadius: '50%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      position: 'relative',\r\n      bottom: '5px',\r\n      background: '#002B45',\r\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    completed: {\r\n      background: '#FF0049',\r\n    },\r\n  });\r\n  \r\n  function ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n  \r\n    const { active, completed } = props;\r\n  \r\n    const numbers = {\r\n      1: 1,\r\n      2: 2,\r\n      3: 3,\r\n    };  \r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {completed ? <Check className={classes.completed} /> : numbers[String(props.icon)]}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  function getSteps() {\r\n    return ['', '', ''];\r\n  }\r\n  \r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return '';\r\n      case 1:\r\n        return '';\r\n      case 2:\r\n        return '';\r\n      default:\r\n        return '';\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}