{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cocci\\\\Desktop\\\\react\\\\openbankbase\\\\ok-test-main\\\\src\\\\components\\\\Feedback\\\\ResponseScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../Context';\nimport { ResponseKO } from './ResponseKO';\nimport { ResponseOK } from './ResponseOK';\nimport triangulo from '../../assets/img/triangulo.png';\nexport const ResponseScreen = () => {\n  const {\n    setActiveStep,\n    apiresponse\n  } = useContext(Context); //se traen del context la respuesta de la api y el manejador del step-progress-bar\n\n  const [resultado, setresultado] = useState(null); //se declara un useState para manejar que respuesta se va a renderizar\n\n  useEffect(() => {\n    /* dependiendo del estado de la respuesta recibida se setea el useState para mostrar el mensaje de respuesta exitosa o de respuesta fallida */\n    if (apiresponse.status !== 200) {\n      setresultado(false);\n      setActiveStep(2); // para que ejecute el cambio del step-progress-bar y quede activa el step número 3\n    } else {\n      setresultado(true);\n      setActiveStep(3); // para que ejecute el cambio del step-progress-bar y lo coloque con la última tarea en cumplida, cosa que no hará si se rechaza la petición\n    }\n  }, [apiresponse.status, setActiveStep]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: triangulo,\n    alt: \"triangulo\",\n    className: \"screen3__triangulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__container animate__animated animate__fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Crea tu Password Manager\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base__underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), resultado ? /*#__PURE__*/React.createElement(ResponseOK, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(ResponseKO, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 43\n    }\n  }), \"  \")));\n};","map":{"version":3,"sources":["C:/Users/cocci/Desktop/react/openbankbase/ok-test-main/src/components/Feedback/ResponseScreen.js"],"names":["React","useContext","useEffect","useState","Context","ResponseKO","ResponseOK","triangulo","ResponseScreen","setActiveStep","apiresponse","resultado","setresultado","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAEhC,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA+BT,UAAU,CAAEG,OAAF,CAA/C,CAFgC,CAE2B;;AAE3D,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C,CAJgC,CAIkB;;AAElDD,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,QAAGQ,WAAW,CAACG,MAAZ,KAAqB,GAAxB,EAA4B;AACxBD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAH,MAAAA,aAAa,CAAC,CAAD,CAAb,CAFwB,CAEP;AACpB,KAHD,MAGK;AACDG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAH,MAAAA,aAAa,CAAC,CAAD,CAAb,CAFC,CAEgB;AACpB;AACJ,GARQ,EAQN,CAACC,WAAW,CAACG,MAAb,EAAqBJ,aAArB,CARM,CAAT;AAUA,sBACI,uDACI;AAAK,IAAA,GAAG,EAAEF,SAAV;AAAqB,IAAA,GAAG,EAAC,WAAzB;AAAqC,IAAA,SAAS,EAAC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,oBAEI;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGCI,SAAS,gBAAC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,gBAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH1B,OADJ,CAFJ,CADJ;AAYH,CA5BM","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../Context';\r\nimport { ResponseKO } from './ResponseKO';\r\nimport { ResponseOK } from './ResponseOK';\r\nimport triangulo from '../../assets/img/triangulo.png'\r\n\r\nexport const ResponseScreen = () => {\r\n    \r\n    const {setActiveStep, apiresponse} = useContext (Context); //se traen del context la respuesta de la api y el manejador del step-progress-bar\r\n\r\n    const [resultado, setresultado] = useState(null); //se declara un useState para manejar que respuesta se va a renderizar\r\n\r\n    useEffect(() => { /* dependiendo del estado de la respuesta recibida se setea el useState para mostrar el mensaje de respuesta exitosa o de respuesta fallida */\r\n        if(apiresponse.status!==200){\r\n            setresultado(false)\r\n            setActiveStep(2);// para que ejecute el cambio del step-progress-bar y quede activa el step número 3\r\n        }else{\r\n            setresultado(true); \r\n            setActiveStep(3);// para que ejecute el cambio del step-progress-bar y lo coloque con la última tarea en cumplida, cosa que no hará si se rechaza la petición\r\n        }\r\n    }, [apiresponse.status, setActiveStep])\r\n\r\n    return (\r\n        <>\r\n            <img src={triangulo} alt=\"triangulo\" className=\"screen3__triangulo\" /> {/* Imagen triangular que señala en que paso del step-progressbar nos encontramos */}\r\n            <div className=\"base__container animate__animated animate__fadeIn\">\r\n                <div className=\"base__content\">\r\n                    <h1>Crea tu Password Manager</h1>\r\n                    <div className=\"base__underline\"></div>\r\n                {resultado?<ResponseOK />:<ResponseKO />}  {/* renderiza un componente u otro dependiendo de la respusta de la api */} \r\n                </div> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}